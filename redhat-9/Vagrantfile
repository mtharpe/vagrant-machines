Vagrant.require_version '>= 2.1.0'


MACHINE_NAME = 'redhat-9'.freeze

# Config engine (Ansible)
CONFIG_ENGINE = 'ansible'.freeze

# Ansible global controls
ANSIBLE_PLAYBOOK = 'ansible-fedora-base'.freeze
ANSIBLE_ROLE = 'server'.freeze
ANSIBLE_SETUP_FILE = 'setup_server.yml'.freeze

user = ENV['RH_SUBSCRIPTION_MANAGER_USER']
password = ENV['RH_SUBSCRIPTION_MANAGER_PW']
if !user || !password
  puts 'Required environment variables not found. Please set RH_SUBSCRIPTION_MANAGER_USER and RH_SUBSCRIPTION_MANAGER_PW'
  abort
end

register_script = %(
if ! subscription-manager status; then
  sudo subscription-manager register --username=#{user} --password=#{password} --auto-attach
fi

dnf upgrade -y
)

unregister_script = %(
if subscription-manager status; then
  sudo subscription-manager unregister
fi
)

Vagrant.configure('2') do |config|
  config.vm.box = 'generic/rhel9'
  config.vm.synced_folder '.', '/vagrant', disabled: true
  config.vm.network :private_network, auto_network: true
  config.vm.hostname = MACHINE_NAME

  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.manage_guest = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true

  config.vm.provider 'virtualbox' do |vb|
    vb.cpus = 2
    vb.memory = '2048'
  end

  config.vm.provision 'shell', inline: register_script

  config.trigger.before :destroy do |trigger|
    trigger.name = 'Before Destroy trigger'
    trigger.info = 'Unregistering this VM from RedHat Subscription Manager...'
    trigger.warn = 'If this fails, unregister VMs manually at https://access.redhat.com/management/subscriptions'
    trigger.run_remote = { inline: unregister_script }
    trigger.on_error = :continue
  end
  if CONFIG_ENGINE == 'ansible'
    config.vm.provision 'ansible' do |ansible|
      ansible.playbook = "ansible/#{ANSIBLE_PLAYBOOK}/#{ANSIBLE_ROLE}/#{ANSIBLE_SETUP_FILE}"
    end
  else
    config.vm.provision 'shell', inline: <<-SHELL
      sudo dnf upgrade -y
    SHELL
  end
end
